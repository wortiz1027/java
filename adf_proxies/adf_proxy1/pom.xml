<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0">

    <modelVersion>4.0.0</modelVersion>
    <groupId>co.com.adf.proxies</groupId>
    <artifactId>adf_proxy1</artifactId>
    <version>1.0-SNAPSHOT</version>
    <description>Project for adf_proxy1</description>
	
    <!-- 
        Informacion de la organizacion 
    -->
    <organization>
        <name>developer.io</name>
        <url>http://willmanortiz.wordpress.com/</url>
    </organization>
	
    <!-- 
        Informacion de la licencia 
    -->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
	
    <!-- 
        Informacion del equipo de desarrollo :p 
    -->
    <developers>
        <developer>
            <id>wortiz</id>
            <name>Wilman Ortiz</name>
            <url>http://willmanortiz.wordpress.com/</url>
            <organization>Developer</organization>
            <organizationUrl>http://willmanortiz.wordpress.com/</organizationUrl>
            <roles>
                <role>Arquitecto</role>
                <role>Desarrollador</role>
            </roles>
            <timezone>America/Bogota</timezone>
            <properties>
                <picture>http://www.oorsprong.org/WebSamples.CountryInfo/Images/Colombia.jpg</picture>
            </properties>
        </developer>
    </developers>
	
    <!-- 
		Repositorios maven 
    -->
    <repositories>
        <repository>
            <id>devops-group</id>
            <url>http://centos-cicd1:8081/repository/devops-group/</url>          
        </repository>
        <repository>
            <id>maven-public</id>
            <url>http://centos-cicd1:8081/repository/maven-public/</url>
        </repository>        
    </repositories>
	
    <!-- 
		Configuracion repositorios de distribucion de artefactos 
    -->
    <distributionManagement>
        <snapshotRepository>
            <id>devops-snapshots</id>
            <url>http://centos-cicd1:8081/repository/devops-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>devops-releases</id>
            <url>http://centos-cicd1:8081/repository/devops-releases/</url>
        </repository>
    </distributionManagement>
	
	<!-- 
		Perfiles
    -->
    <profiles>
        <profile>
            <id>sonar</id>
            <properties>
                <sonar.host.url>http://centos-cicd1:9000/sonarqube/</sonar.host.url>
                <sonar.login>ae39e04fd6a36edbabdeb5c7bf133fdf022926b8</sonar.login>
                <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                <sonar.surefire.reportsPath>${project.basedir}/target/surefire-reports</sonar.surefire.reportsPath>
                <sonar.coverage.jacoco.xmlReportPaths>
													${project.build.directory}/site/jacoco-unit-test-coverage-report/jacoco.xml,
                                                    ${project.build.directory}/site/jacoco-integration-test-coverage-report/jacoco.xml
				</sonar.coverage.jacoco.xmlReportPaths>
                <sonar.projectVersion>v1.0</sonar.projectVersion>
                <sonar.language>java</sonar.language>
                <sonar.exclusions>src/main/resources/**</sonar.exclusions>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
	
    <!-- 
        Propiedades y versiones de las dependencias del proyecto
    -->
    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <oracleHome>${env.ORACLE_HOME}</oracleHome>
        <junit.version>4.12</junit.version>
        <mockito.version>2.7.12</mockito.version>
        <adf.libraries.version>12.1.3-0-0</adf.libraries.version>
		<jacoco.version>0.8.4</jacoco.version>
		<sonarqube.version>3.6.1.1688</sonarqube.version>
		<maven.clean.version>2.6.1</maven.clean.version>
		<maven.properties.version>1.0-alpha-2</maven.properties.version>
		<maven.resource.version>2.7</maven.resource.version>
		<maven.enforce.version>1.4</maven.enforce.version>
        <config.version>1.0-SNAPSHOT</config.version>
        <modelo.version>1.0-SNAPSHOT</modelo.version>
        <skipITs>${skipITests}</skipITs>
        <skipUTs>${skipUTests}</skipUTs>
    </properties>
	
    <!-- 
	Dependencias generales del proyecto
    -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>co.com.adf.configuraciones</groupId>
            <artifactId>adf_configuracion1</artifactId>
            <version>${config.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>co.com.adf.configuraciones</groupId>
            <artifactId>adf_modelo</artifactId>
            <version>${modelo.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.adf.library</groupId>
            <artifactId>JAX-WS-Client</artifactId>
            <version>${adf.libraries.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.adf.library</groupId>
            <artifactId>JAX-WS-Web-Services</artifactId>
            <version>${adf.libraries.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.adf.library</groupId>
            <artifactId>TopLink</artifactId>
            <version>${adf.libraries.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.adf.library</groupId>
            <artifactId>ADF-Common-Runtime</artifactId>
            <version>${adf.libraries.version}</version>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.oracle.adf.library</groupId>
            <artifactId>Oracle-XML-Parser-v2</artifactId>
            <version>${adf.libraries.version}</version>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.4</version>
        </dependency>
    </dependencies>
	
    <build>
        <!-- 
            Directorios :: Directorios segun el estandar de Maven
        -->
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
        <outputDirectory>${project.basedir}/target</outputDirectory>
		
        <!-- 
            Resource :: Configuracion especial para el directorio de pruebas unitarias
        -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.xsd</include>
                    <include>**/*.wsdl</include>
                    <include>**/*.proxy</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/</directory>
                <includes>
                    <include>*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/test/java/</directory>
            </resource>
            <resource>
                <directory>src/itest/java/</directory>
            </resource>
        </resources>
		
		<!-- 
            Filtros :: Filtrar archivos de propiedades
        -->
		<filters>
		  <filter>${project.basedir}/../env/${env}/${env}.properties</filter>
		</filters>    
		
        <!-- 
            Plugins :: Complementos especiales para mejorar maven
        -->
        <plugins>
            <!--plugin>
                <groupId>com.oracle.adf.plugin</groupId>
                <artifactId>ojdeploy</artifactId>
                <version>12.2.1-3-0</version>
                <configuration>
                    <ojdeploy>${oracleHome}/jdeveloper/jdev/bin/ojdeploy</ojdeploy>
                    <workspace>${basedir}/../adf_proxies.jws</workspace>
                    <project>adf_proxy1</project>
                    <profile>CountryInfoService-Client</profile>
                    <outputfile>${project.build.directory}/${project.build.finalName}.jar</outputfile>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->
			
			<!-- 
				Plugin :: Para solicitar el perfil con las propiedades de los ambientes
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven.enforce.version}</version>
				<executions>
				  <execution>
					<id>enforce-property</id>
					<goals>
					  <goal>enforce</goal>
					</goals>
					<configuration>
					  <rules>
						<requireProperty>
						  <property>env</property>
						  <message>
								   +-----------------------------------------------+ 
								   | Debe digitar un valor para la propiedad 'env' | 
								   | Ejemplo: mvn -Denv=dev                        |
								   +-----------------------------------------------+
						  </message>
						</requireProperty>
					  </rules>
					  <fail>true</fail>
					</configuration>
				  </execution>
				</executions>
			</plugin>
			
			<!-- 
				Plugin :: Para gestionar los archivos de propiedades con las propiedades de los ambientes
			-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resource.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
				  <execution>
					<id>copy-project-properties</id>
					<phase>validate</phase>
					<goals>
					  <goal>copy-resources</goal>
					</goals>
					<configuration>
					  <outputDirectory>${project.basedir}/tmp/${env}</outputDirectory>
					  <resources>         
						<resource>
						  <directory>${project.basedir}/../env/${env}</directory>
						  <includes>
							<include>*.properties</include>
						  </includes>
						  <filtering>true</filtering>
						</resource>
					  </resources>             
					</configuration>           
				  </execution>     
				</executions>
			</plugin>
			
			<!-- 
				Plugin :: Para leer las propiedades de los archivos *.properties
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${maven.properties.version}</version>
				<executions>
				  <execution>
					<phase>initialize</phase>
					<goals>
					  <goal>read-project-properties</goal>
					</goals>
				  </execution>
				</executions>
				<configuration>
				  <files>
					<file>${project.basedir}/tmp/${env}/${env}.properties</file>
				  </files>
				</configuration>
			</plugin>
			
			<!-- 
				Plugin :: Para limpiar directorio temporal
			-->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.version}</version>
				<configuration>
				  <filesets>
					<fileset>
					  <directory>${project.basedir}/tmp</directory>
					  <followSymlinks>false</followSymlinks>
					</fileset>
				  </filesets>
				</configuration>
			</plugin>        
			
            <!-- 
                Plugin :: Maven para agregar un nuevo directorio para las test de integracion 
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-integration-test-source-as-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/itest/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			
            <!-- 
                Plugin :: Maven para ejecutar los unit tests 
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <excludes>
                        <exclude>**/*ITest.java</exclude>
                    </excludes>
                    <skipTests>${skipUTs}</skipTests>
                    <argLine>${surefire.jacoco.args}</argLine>
                </configuration>
            </plugin>
			
            <!-- 
                Plugin :: Maven para ejecutar los integration tests 
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <skipTests>${skipTests}</skipTests>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <argLine>${failsafe.jacoco.args}</argLine>
                    <includes>
                        <!-- Run every java class in the 'tests' package -->
                        <include>**/*ITest*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
			<!-- 
                Plugin :: Maven para ejecutar la covertura de test
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <element>CLASS</element>
                    <excludes>
                        <exclude>co.com.adf.proxies.countries.proxy.*</exclude>
                        <exclude>co.com.adf.proxies.countries.types.*</exclude>
                        <exclude>co.com.adf.proxies.countries.**.*Test*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>before-unit-test-execution</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-unit-test-execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>before-integration-test-execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</destFile>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/jacoco-integration-tests.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-unit-and-integration</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <excludes>
                                        <exclude>co.com.adf.proxies.countries.proxy.*</exclude>
                                        <exclude>co.com.adf.proxies.countries.types.*</exclude>
                                        <exclude>co.com.adf.proxies.countries.**.*Test*</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>80%</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>80%</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
		
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonarqube.version}</version>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>sonar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
