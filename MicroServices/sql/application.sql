-- SCHEMA FACTURACION
-- AUTOR: WILMAN ORTIZ
-- FECHA: 24 AGO 2015

-- ELIMINAR TABLAS
DROP TABLE USERS                CASCADE CONSTRAINT; 
DROP TABLE ROLES                CASCADE CONSTRAINT;
DROP TABLE USERS_ROLES          CASCADE CONSTRAINT;
DROP TABLE CLIENTES             CASCADE CONSTRAINT;
DROP TABLE PRODUCTO             CASCADE CONSTRAINT;
DROP TABLE FACTURA              CASCADE CONSTRAINT;
DROP TABLE DETALLE_FACTURA      CASCADE CONSTRAINT;
DROP TABLE IMAGEN               CASCADE CONSTRAINT;
DROP TABLE OAUTH_CLIENT_DETAILS CASCADE CONSTRAINT;
DROP TABLE OAUTH_CLIENT_TOKEN   CASCADE CONSTRAINT;
DROP TABLE OAUTH_ACCESS_TOKEN   CASCADE CONSTRAINT;
DROP TABLE OAUTH_REFRESH_TOKEN  CASCADE CONSTRAINT;
DROP TABLE OAUTH_CODE           CASCADE CONSTRAINT;
DROP TABLE OAUTH_APPROVALS      CASCADE CONSTRAINT;
DROP TABLE CLIENT_DETAILS       CASCADE CONSTRAINT;
DROP TABLE PERSISTENT_LOGINS    CASCADE CONSTRAINT;

DROP SEQUENCE SQ_USERS;
DROP SEQUENCE SQ_ROLES;
DROP SEQUENCE SQ_PRODUCTO;
DROP SEQUENCE SQ_FACTURA;
DROP SEQUENCE SQ_CLIENTES;
DROP SEQUENCE SQ_IMAGEN;
DROP SEQUENCE SQ_DETALLE_FACTURA;

-- DROP TRIGGER TRG_USERS;
-- DROP TRIGGER TRG_ROLES;
-- DROP TRIGGER TRG_PRODUCTO;
-- DROP TRIGGER TRG_FACTURA;

-- CREANDO TABLAS
CREATE TABLE USERS(
	   ID_USER                NUMBER NOT NULL,
	   CEDULA                 NUMBER NOT NULL,
	   NOMBRE                 VARCHAR2(50) NOT NULL,
	   APELLIDO               VARCHAR2(50) NOT NULL,
	   DIRECCION              VARCHAR2(100),
	   FECHA_NACIMIENTO       DATE,
	   FECHA_INGRESO          DATE,
	   FECHA_RETIRO           DATE,
	   TELEFONO               VARCHAR2(30),
	   EMAIL                  VARCHAR2(100) NOT NULL,
	   LOGIN                  VARCHAR2(30) NOT NULL,
	   PASSWORD         	  VARCHAR2(100) NOT NULL,
	   ENABLE                 VARCHAR2(10),
	   ACCOUNT_NON_EXPIRED    VARCHAR2(10),
	   CREDENTIAL_NON_EXPIRED VARCHAR2(10),
	   ACCOUNT_NON_LOCKED     VARCHAR2(10),
	   ID_IMG                 NUMBER
);

CREATE TABLE ROLES(
       ID_ROLE NUMBER NOT NULL,
       ROLE    VARCHAR2(50) NOT NULL
);

CREATE TABLE USERS_ROLES(
       USER_ID NUMBER NOT NULL,
       ROLE_ID NUMBER NOT NULL
);

CREATE TABLE OAUTH_CLIENT_DETAILS (
       CLIENT_ID               VARCHAR2(255),
       CLIENT_NAME             VARCHAR2(255),
       RESOURCE_IDS            VARCHAR2(255),
       CLIENT_SECRET           VARCHAR2(255),
       SCOPE                   VARCHAR2(255),
       AUTHORIZED_GRANT_TYPES  VARCHAR2(255),
       WEB_SERVER_REDIRECT_URI VARCHAR2(255),
       AUTHORITIES             VARCHAR2(255),
       ACCESS_TOKEN_VALIDITY   NUMBER(10,0),
       REFRESH_TOKEN_VALIDITY  NUMBER(10,0),
       ADDITIONAL_INFORMATION  VARCHAR2(2000),
       AUTOAPPROVE             VARCHAR2(255)
);

CREATE TABLE OAUTH_CLIENT_TOKEN (
       AUTHENTICATION_ID VARCHAR2(255),
       TOKEN_ID          VARCHAR2(255),
       TOKEN             BLOB,       
       USER_NAME         VARCHAR2(255),
       CLIENT_ID         VARCHAR2(255)
);

CREATE TABLE OAUTH_ACCESS_TOKEN (
       AUTHENTICATION_ID VARCHAR2(255),
       TOKEN_ID          VARCHAR2(255),
       TOKEN             BLOB,       
       USER_NAME         VARCHAR2(255),
       CLIENT_ID         VARCHAR2(255),
       AUTHENTICATION    BLOB,
       REFRESH_TOKEN     VARCHAR2(255)
);

CREATE TABLE OAUTH_REFRESH_TOKEN (
       TOKEN_ID       VARCHAR2(255),
       TOKEN          BLOB,
       AUTHENTICATION BLOB
);

CREATE TABLE OAUTH_CODE (
       CODE           VARCHAR2(255), 
       AUTHENTICATION BLOB
);

CREATE TABLE OAUTH_APPROVALS (
       USERID         VARCHAR2(255),
       CLIENTID       VARCHAR2(255),
       SCOPE          VARCHAR2(255),
       STATUS         VARCHAR2(10),
       EXPIRESAT      DATE,
       LASTMODIFIEDAT DATE
);

CREATE TABLE CLIENT_DETAILS (
       APPID                  VARCHAR2(255),
       RESOURCEIDS            VARCHAR2(255),
       APPSECRET              VARCHAR2(255),
       SCOPE                  VARCHAR2(255),
       GRANTTYPES             VARCHAR2(255),
       REDIRECTURL            VARCHAR2(255),
       AUTHORITIES            VARCHAR2(255),
       ACCESS_TOKEN_VALIDITY  NUMBER(10,0),
       REFRESH_TOKEN_VALIDITY NUMBER(10,0),
       ADDITIONALINFORMATION  VARCHAR2(2000),
       AUTOAPPROVESCOPES      VARCHAR2(255)
);

CREATE TABLE PERSISTENT_LOGINS (
       USERNAME    VARCHAR2(64) NOT NULL,
       SERIES      VARCHAR2(64) NOT NULL,
       TOKEN       VARCHAR2(64) NOT NULL,
       LAST_USED   DATE NOT NULL
);

CREATE TABLE CLIENTES(
	   ID_CLIENTE       NUMBER NOT NULL,
	   CEDULA           NUMBER NOT NULL,
	   NOMBRE           VARCHAR2(50) NOT NULL,
	   APELLIDO         VARCHAR2(50) NOT NULL,
	   DIRECCION        VARCHAR2(100),
	   FECHA_NACIMIENTO DATE,
	   TELEFONO         VARCHAR2(30),
	   EMAIL            VARCHAR2(100) NOT NULL,
	   ID_IMG           NUMBER
);

CREATE TABLE PRODUCTO(
	   ID_PRODUCTO NUMBER NOT NULL,
	   CODIGO      VARCHAR2(100) NOT NULL,
	   NOMBRE      VARCHAR2(100) NOT NULL,
	   PRECIO      NUMBER NOT NULL,
	   STOCK       NUMBER NOT NULL
);

CREATE TABLE FACTURA(
	   NUMERO_FACTURA NUMBER NOT NULL,
	   FECHA          DATE NOT NULL,
	   ID_CLIENTE     NUMBER NOT NULL
);

CREATE TABLE DETALLE_FACTURA(
	   NUM_DETALLE    NUMBER NOT NULL,
	   NUMERO_FACTURA NUMBER NOT NULL,
	   ID_PRODUCTO    NUMBER NOT NULL,
	   CANTIDAD       NUMBER NOT NULL,
	   PRECIO         NUMBER NOT NULL
);

CREATE TABLE IMAGEN(
	   ID_IMAGEN NUMBER NOT NULL,
	   IMG_PATH  VARCHAR2(512) NOT NULL,
	   IMG_NAME  VARCHAR2(256) NOT NULL,
	   IMG_SIZE  VARCHAR2(100) NOT NULL,
	   IMG_TYPE  VARCHAR2(100) NOT NULL
);

-- EJECUTANDO CONSTRAINT
ALTER TABLE USERS ADD CONSTRAINT USER_PK PRIMARY KEY (ID_USER);

ALTER TABLE USERS ADD CONSTRAINT USER_LG_UK UNIQUE (LOGIN);
ALTER TABLE USERS ADD CONSTRAINT USER_CC_UK UNIQUE (CEDULA);CLIENT_DESC

ALTER TABLE ROLES ADD CONSTRAINT ROLE_PK PRIMARY KEY(ID_ROLE);

ALTER TABLE USERS_ROLES ADD CONSTRAINT USER_ROLE_PK PRIMARY KEY (USER_ID, ROLE_ID);
ALTER TABLE USERS_ROLES ADD CONSTRAINT USER_FK      FOREIGN KEY (USER_ID) REFERENCES USERS(ID_USER);
ALTER TABLE USERS_ROLES ADD CONSTRAINT ROLE_FK      FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID_ROLE);

ALTER TABLE OAUTH_CLIENT_DETAILS ADD CONSTRAINT OAUTH2_CLIENT_PK PRIMARY KEY (CLIENT_ID);

ALTER TABLE OAUTH_CLIENT_DETAILS ADD CONSTRAINT OAUTH2_CLIENT_UK UNIQUE (CLIENT_NAME);

ALTER TABLE OAUTH_CLIENT_TOKEN ADD CONSTRAINT OAUTH2_CLIENT_TOKEN_PK PRIMARY KEY (AUTHENTICATION_ID);

ALTER TABLE OAUTH_ACCESS_TOKEN ADD CONSTRAINT OAUTH2_ACCESS_TOKEN_PK PRIMARY KEY (AUTHENTICATION_ID);

ALTER TABLE CLIENT_DETAILS ADD CONSTRAINT CLIENT_DETAIL_PK PRIMARY KEY (APPID);

ALTER TABLE PERSISTENT_LOGINS ADD CONSTRAINT PERSISTEN_TOKEN_PK PRIMARY KEY (SERIES);

ALTER TABLE IMAGEN ADD CONSTRAINT IMAGEN_PK PRIMARY KEY (ID_IMAGEN);

ALTER TABLE USERS ADD CONSTRAINT USER_IMAGEN_FK FOREIGN KEY (ID_IMG) REFERENCES IMAGEN(ID_IMAGEN);

ALTER TABLE CLIENTES ADD CONSTRAINT CLIENTE_PK    PRIMARY KEY (ID_CLIENTE);
ALTER TABLE CLIENTES ADD CONSTRAINT CLIENTE_CC_UK UNIQUE (CEDULA);
ALTER TABLE CLIENTES ADD CONSTRAINT IMAGEN_FK     FOREIGN KEY (ID_IMG) REFERENCES IMAGEN (ID_IMAGEN);

ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_PK PRIMARY KEY (ID_PRODUCTO);
ALTER TABLE PRODUCTO ADD CONSTRAINT PRODUCTO_COD_UK UNIQUE (CODIGO);

ALTER TABLE FACTURA ADD CONSTRAINT FACTURA_PK PRIMARY KEY (NUMERO_FACTURA);
ALTER TABLE FACTURA ADD CONSTRAINT CLIENTE_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE);

ALTER TABLE DETALLE_FACTURA ADD CONSTRAINT DETALLE_FACTURA_PK  PRIMARY KEY (NUM_DETALLE, NUMERO_FACTURA);
ALTER TABLE DETALLE_FACTURA ADD CONSTRAINT FACTURA_DETALLE_FK  FOREIGN KEY (NUMERO_FACTURA) REFERENCES FACTURA(NUMERO_FACTURA);
ALTER TABLE DETALLE_FACTURA ADD CONSTRAINT PRODUCTO_DETALLE_FK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO);

-- CREANDO SECUENCIAS
CREATE SEQUENCE SQ_USERS           INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_ROLES           INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_PRODUCTO        INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_FACTURA         INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_CLIENTES        INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_IMAGEN          INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;
CREATE SEQUENCE SQ_DETALLE_FACTURA INCREMENT BY 1 START WITH 1 MAXVALUE 999999999999999999999 MINVALUE 1;

-- CREANDO TRIGGERS
CREATE OR REPLACE TRIGGER TRG_USERS BEFORE INSERT ON USERS
 FOR EACH ROW
  BEGIN
       IF (:NEW.ID_USER IS NULL) THEN
           SELECT SQ_USERS.NEXTVAL INTO :NEW.ID_USER
           FROM DUAL;           
       END IF;
  END;
/  

CREATE OR REPLACE TRIGGER TRG_ROLES BEFORE INSERT ON ROLES
 FOR EACH ROW
  BEGIN
       IF (:NEW.ID_ROLE IS NULL) THEN
           SELECT SQ_ROLES.NEXTVAL INTO :NEW.ID_ROLE
           FROM DUAL;           
       END IF;
  END;
/

CREATE OR REPLACE TRIGGER TRG_IMAGEN BEFORE INSERT ON IMAGEN
 FOR EACH ROW
  BEGIN
       IF (:NEW.ID_IMAGEN IS NULL) THEN
           SELECT SQ_IMAGEN.NEXTVAL INTO :NEW.ID_IMAGEN
           FROM DUAL;           
       END IF;
  END;
/

CREATE OR REPLACE TRIGGER TRG_CLIENTES BEFORE INSERT ON CLIENTES
 FOR EACH ROW
  BEGIN
       IF (:NEW.ID_CLIENTE IS NULL) THEN
           SELECT SQ_CLIENTES.NEXTVAL INTO :NEW.ID_CLIENTE
           FROM DUAL;           
       END IF;
  END;
/  

CREATE OR REPLACE TRIGGER TRG_PRODUCTO BEFORE INSERT ON PRODUCTO
 FOR EACH ROW
  BEGIN
       IF (:NEW.ID_PRODUCTO IS NULL) THEN
           SELECT SQ_PRODUCTO.NEXTVAL INTO :NEW.ID_PRODUCTO
           FROM DUAL;           
       END IF;
  END;
/

CREATE OR REPLACE TRIGGER TRG_FACTURA BEFORE INSERT ON FACTURA
 FOR EACH ROW
  BEGIN
       IF (:NEW.NUMERO_FACTURA IS NULL) THEN
           SELECT SQ_FACTURA.NEXTVAL INTO :NEW.NUMERO_FACTURA
           FROM DUAL;           
       END IF;
  END;
/

ALTER TRIGGER TRG_USERS    ENABLE;
ALTER TRIGGER TRG_ROLES    ENABLE;
ALTER TRIGGER TRG_PRODUCTO ENABLE;
ALTER TRIGGER TRG_FACTURA  ENABLE;

-- INSERTANDO VALORES POR DEFECTO
INSERT INTO OAUTH_CLIENT_DETAILS (CLIENT_ID,CLIENT_NAME,RESOURCE_IDS,CLIENT_SECRET,SCOPE,AUTHORIZED_GRANT_TYPES,WEB_SERVER_REDIRECT_URI,AUTHORITIES,ACCESS_TOKEN_VALIDITY,REFRESH_TOKEN_VALIDITY,ADDITIONAL_INFORMATION,AUTOAPPROVE) VALUES ('clientapp','WebApp','microservice','987654321','read,write','password,refresh_token,client_credentials','http://localhost:8086/MicroServices/','USER','300','600',null,null);

INSERT INTO USERS(CEDULA, NOMBRE, APELLIDO, DIRECCION, FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_RETIRO, TELEFONO, EMAIL, LOGIN, PASSWORD, ENABLE, ACCOUNT_NON_EXPIRED, CREDENTIAL_NON_EXPIRED, ACCOUNT_NON_LOCKED, ID_IMG) VALUES (8649168, 'root', 'admin', 'Carrera 123', TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),3166178398,'root@gmail.com','root','$2a$10$tartLAsO2Bm8iMtrqdyQXua/CMZ3/8260G/c4OKza6DslRKexKSuW','true','true','true','true',null);
INSERT INTO USERS(CEDULA, NOMBRE, APELLIDO, DIRECCION, FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_RETIRO, TELEFONO, EMAIL, LOGIN, PASSWORD, ENABLE, ACCOUNT_NON_EXPIRED, CREDENTIAL_NON_EXPIRED, ACCOUNT_NON_LOCKED, ID_IMG) VALUES (1043000687, 'Juan', 'Ortiz', 'Av. Siempre viva 742', TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),3016394477,'jortiz@hotmail.com','jortiz','$2a$10$tartLAsO2Bm8iMtrqdyQXua/CMZ3/8260G/c4OKza6DslRKexKSuW','true','true','true','true',null);
INSERT INTO USERS(CEDULA, NOMBRE, APELLIDO, DIRECCION, FECHA_NACIMIENTO, FECHA_INGRESO, FECHA_RETIRO, TELEFONO, EMAIL, LOGIN, PASSWORD, ENABLE, ACCOUNT_NON_EXPIRED, CREDENTIAL_NON_EXPIRED, ACCOUNT_NON_LOCKED, ID_IMG) VALUES (123456789, 'Guest' , 'User', 'NOT_FOUND', TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),TO_DATE(SYSDATE,'dd/MM/yyyy'),3016390440,'guest@example.com','guest','$2a$10$tartLAsO2Bm8iMtrqdyQXua/CMZ3/8260G/c4OKza6DslRKexKSuW','true','true','true','true',null);

INSERT INTO ROLES(ROLE) VALUES ('ROLE_ADMIN');
INSERT INTO ROLES(ROLE) VALUES ('ROLE_USER');
INSERT INTO ROLES(ROLE) VALUES ('ROLE_GUEST');

INSERT INTO USERS_ROLES(USER_ID, ROLE_ID) VALUES (1, 1);
INSERT INTO USERS_ROLES(USER_ID, ROLE_ID) VALUES (1, 2);
INSERT INTO USERS_ROLES(USER_ID, ROLE_ID) VALUES (2, 2);
INSERT INTO USERS_ROLES(USER_ID, ROLE_ID) VALUES (3, 3);

INSERT INTO APPLICATION.CLIENTES (ID_CLIENTE,CEDULA,NOMBRE,APELLIDO,DIRECCION,FECHA_NACIMIENTO,TELEFONO,EMAIL,ID_IMG) VALUES ('1','123456','Juan','Perez','Calle 123',to_date('05/07/93','DD/MM/RR'),'03166178398','karlos@hotmail.com',null);
INSERT INTO APPLICATION.CLIENTES (ID_CLIENTE,CEDULA,NOMBRE,APELLIDO,DIRECCION,FECHA_NACIMIENTO,TELEFONO,EMAIL,ID_IMG) VALUES ('2','789987','Alvaro','Otalora','Calle 456',to_date('05/07/10','DD/MM/RR'),'987654','gene@gmail.com',null);
INSERT INTO APPLICATION.CLIENTES (ID_CLIENTE,CEDULA,NOMBRE,APELLIDO,DIRECCION,FECHA_NACIMIENTO,TELEFONO,EMAIL,ID_IMG) VALUES ('3','4567654999','Pibe','Valderrama','Calle XYZ',to_date('04/07/12','DD/MM/RR'),'87654377','chary123@hotmail.com',null);
INSERT INTO APPLICATION.CLIENTES (ID_CLIENTE,CEDULA,NOMBRE,APELLIDO,DIRECCION,FECHA_NACIMIENTO,TELEFONO,EMAIL,ID_IMG) VALUES ('4','9191919','Tino','Asprilla','Calle 321',to_date('03/03/40','DD/MM/RR'),'765432','ram@yahoo.es',null);
INSERT INTO APPLICATION.CLIENTES (ID_CLIENTE,CEDULA,NOMBRE,APELLIDO,DIRECCION,FECHA_NACIMIENTO,TELEFONO,EMAIL,ID_IMG) VALUES ('6','9292923','Andres','Iniesta','Cra 123',to_date('19/09/84','DD/MM/RR'),'876543','maria@hotmail.com',null);

INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('001','BOARD INTEL MODELO 2015',300000,35);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('002','BOARD ASUS MODELO 2015',500000,20);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('003','BOARD MSI MODELO 2015',400000,15);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('004','TECLADO ASUS ROG MODELO 2015',30000,50);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('005','TECLADO MSI GAMER MODELO 2015',45000,10);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('006','TECLADO BASICO MODELO 2015',20000,20);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('007','MOUSE GENIUS MODELO 2015',13000,50);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('008','MOUSE GENIUS GAMER MODELO 2015',80000,5);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('009','MEMORIA USB 8 GB',15000,12);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0010','MEMORIA USB 16 GB',30000,35);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0011','MEMORIA USB 32 GB',45000,25);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0012','MEMORIA RAM 4 GB',70000,9);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0013','MEMORIA RAM 8 GB',110000,7);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0014','MEMORIA RAM 16 GB',200000,4);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0015','MONITOR SANSUMG 15 PULGADAS',300000,18);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0016','MONITOR LG 15 PULGADAS',700000,10);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0017','PORTATIL HP 1870',1200000,3);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0018','PORTATIL ASUS GX500',5560000,2);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0019','PORTATIL LENOVO THINKPAD',1800000,4);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0020','DISCO DURO EXTERNO HITACHI 2 TB',200000,20);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0021','DISCO DURO EXTERNO SANSUMG 1 TB',180000,15);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0022','DISCO DURO EXTERNO INTEL 512 GB',120000,35);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0023','CELULAR SANSUMG S6',2600000,11);
INSERT INTO PRODUCTO (NOMBRE, CODIGO, PRECIO, STOCK) VALUES ('0024','CELULAR XIAOMI MI NOTE PRO',1860000,4);

INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('1',TO_DATE('29/09/16','DD/MM/RR'),'1');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('2',TO_DATE('07/09/16','DD/MM/RR'),'1');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('3',TO_DATE('10/09/16','DD/MM/RR'),'1');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('4',TO_DATE('05/09/16','DD/MM/RR'),'1');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('5',TO_DATE('01/09/16','DD/MM/RR'),'2');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('6',TO_DATE('04/09/16','DD/MM/RR'),'2');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('7',TO_DATE('14/09/16','DD/MM/RR'),'2');
INSERT INTO FACTURA (NUMERO_FACTURA,FECHA,ID_CLIENTE) VALUES ('8',TO_DATE('23/09/16','DD/MM/RR'),'2');

INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('1','1','2','3','10000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('2','1','4','2','50000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('3','1','6','4','6600');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('4','2','1','1','56200');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('5','2','7','5','23000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('6','3','22','1','45000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('7','3','11','4','60000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('8','3','8','7','15000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('9','4','20','1','100000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('10','5','4','2','90000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('11','5','6','2','7000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('12','6','18','11','30000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('13','6','19','2','64000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('14','7','9','3','85000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('15','8','14','6','90000');
INSERT INTO DETALLE_FACTURA (NUM_DETALLE,NUMERO_FACTURA,ID_PRODUCTO,CANTIDAD,PRECIO) VALUES ('16','8','13','7','75300');

CREATE OR REPLACE PACKAGE PKG_VENTAS IS
  PROCEDURE SP_OBTENER_CEDULA(ipNOMBRE IN VARCHAR2, opCEDULA OUT NUMBER);
  PROCEDURE SP_CONSULTA_USUARIOS(opLISTADO OUT SYS_REFCURSOR, ipTIPO IN VARCHAR2);
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_VENTAS IS

  PROCEDURE SP_OBTENER_CEDULA(ipNOMBRE IN VARCHAR2, opCEDULA OUT NUMBER) AS
   BEGIN
        SELECT C.CEDULA INTO opCEDULA
        FROM CLIENTES C
        WHERE C.NOMBRE LIKE '%' || ipNOMBRE || '%';
   EXCEPTION
    WHEN OTHERS THEN 
      DBMS_OUTPUT.PUT_LINE('ERROR SP_OBTENER_CEDULA');
   END;

  PROCEDURE SP_CONSULTA_USUARIOS(opLISTADO OUT SYS_REFCURSOR, ipTIPO IN VARCHAR2) AS   
   BEGIN
        OPEN opLISTADO FOR
          SELECT c.cedula,
                 c.nombre,
                 c.apellido,
                 im.img_path,
                 im.img_name
          FROM Clientes c INNER JOIN (SELECT i.id_imagen codigo,
                                             i.img_path,
                                             i.img_name
                                      FROM Imagen i
                                      WHERE i.img_type = ipTIPO) im ON (c.id_img = im.codigo);
    EXCEPTION
      WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE('ERROR EJECUTANDO EL PROCEDIMIENTO');
   END;
END;
/